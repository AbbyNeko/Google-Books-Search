{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abby\\\\Documents\\\\Github\\\\Google-Books-Search\\\\client\\\\src\\\\pages\\\\SearchBooks.js\";\nimport React, { useState, useRef } from \"react\";\nimport API from \"../utils/API\";\nimport BookResult from \"./BookResult\";\n\nfunction SearchBooks() {\n  // Setting our component's initial state\n  const [bookResults, setResults] = useState([]);\n  const searchKeyword = useRef(); // search job postings\n\n  function searchBooks(keyword) {\n    API.searchBooks(keyword).then(res => setResults(res.data)).catch(err => console.log(err));\n  } // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    searchBooks(searchKeyword.current.value);\n  } //console.log(`results - ${JSON.stringify(bookResults)}`);\n\n\n  const listedResults = bookResults.map((result, index) => /*#__PURE__*/React.createElement(BookResult, {\n    bookData: result.volumeInfo,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"Search Google Books\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"search-bar\",\n    type: \"text\",\n    placeholder: \"Search book title, author, etc.\",\n    ref: searchKeyword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Search Books\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, listedResults)));\n}\n\nexport default SearchBooks;","map":{"version":3,"sources":["C:/Users/Abby/Documents/Github/Google-Books-Search/client/src/pages/SearchBooks.js"],"names":["React","useState","useRef","API","BookResult","SearchBooks","bookResults","setResults","searchKeyword","searchBooks","keyword","then","res","data","catch","err","console","log","handleFormSubmit","event","preventDefault","current","value","listedResults","map","result","index","volumeInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,WAAT,GAAuB;AACrB;AACA,QAAM,CAACC,WAAD,EAAcC,UAAd,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMO,aAAa,GAAGN,MAAM,EAA5B,CAJqB,CAMrB;;AACA,WAASO,WAAT,CAAqBC,OAArB,EAA8B;AAC5BP,IAAAA,GAAG,CAACM,WAAJ,CAAgBC,OAAhB,EACGC,IADH,CACQC,GAAG,IAAIL,UAAU,CAACK,GAAG,CAACC,IAAL,CADzB,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD,GAXoB,CAarB;AACA;;;AACA,WAASG,gBAAT,CAA0BC,KAA1B,EAAiC;AAE7BA,IAAAA,KAAK,CAACC,cAAN;AAEAX,IAAAA,WAAW,CAACD,aAAa,CAACa,OAAd,CAAsBC,KAAvB,CAAX;AACH,GApBoB,CAsBrB;;;AAEA,QAAMC,aAAa,GAAGjB,WAAW,CAACkB,GAAZ,CAAgB,CAACC,MAAD,EAASC,KAAT,kBACpC,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAED,MAAM,CAACE,UAA7B;AAAyC,IAAA,GAAG,EAAED,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADoB,CAAtB;AAIE,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAGE;AAAM,IAAA,QAAQ,EAAER,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,iCAHd;AAIE,IAAA,GAAG,EAAEV,aAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAQI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAC,iBAA/B;AAAiD,IAAA,KAAK,EAAC,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAHF,eAeE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGe,aAFH,CAfF,CAFJ,CADJ;AA4BD;;AAGH,eAAelB,WAAf","sourcesContent":["import React, { useState, useRef } from \"react\"\r\nimport API from \"../utils/API\";\r\nimport BookResult from \"./BookResult\";\r\n\r\nfunction SearchBooks() {\r\n  // Setting our component's initial state\r\n  const [bookResults, setResults] = useState([])\r\n\r\n  const searchKeyword = useRef();\r\n\r\n  // search job postings\r\n  function searchBooks(keyword) {\r\n    API.searchBooks(keyword)\r\n      .then(res => setResults(res.data))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // When the form is submitted, use the API.saveBook method to save the book data\r\n  // Then reload books from the database\r\n  function handleFormSubmit(event) {\r\n\r\n      event.preventDefault();\r\n\r\n      searchBooks(searchKeyword.current.value);\r\n  }\r\n\r\n  //console.log(`results - ${JSON.stringify(bookResults)}`);\r\n\r\n  const listedResults = bookResults.map((result, index) => \r\n    <BookResult bookData={result.volumeInfo} key={index}/>\r\n  );\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <div className=\"row\">\r\n              <h1 className=\"title\">Search Google Books</h1>\r\n\r\n              <form onSubmit={handleFormSubmit}>\r\n\r\n                  <input \r\n                    className=\"search-bar\"\r\n                    type=\"text\"\r\n                    placeholder=\"Search book title, author, etc.\"\r\n                    ref={searchKeyword}\r\n                  />\r\n                  <input type=\"submit\" className=\"btn btn-primary\" value=\"Search Books\"/>\r\n\r\n              </form>\r\n\r\n              <div className=\"results\">\r\n\r\n                {listedResults}\r\n\r\n              </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default SearchBooks;\r\n"]},"metadata":{},"sourceType":"module"}