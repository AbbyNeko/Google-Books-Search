{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abby\\\\Documents\\\\Github\\\\Google-Books-Search\\\\client\\\\src\\\\pages\\\\BookResult.js\";\nimport React from \"react\";\nimport API from \"../utils/API\"; // When the form is submitted, use the API.saveBook method to save the book data\n// Then reload books from the database\n\nfunction saveBook(bookData) {\n  console.log(`book data - ${JSON.stringify(bookData)}`);\n  API.saveBook({\n    title: bookData.title,\n    author: bookData.authors[0],\n    synopsis: bookData.description,\n    link: 'www.google.com'\n  }).then(res => console.log('saved')).catch(err => console.log(err));\n}\n\n;\n\nfunction BookResults({\n  bookData\n}) {\n  let authorsListed = '';\n\n  if (bookData.authors) {\n    authorsListed = bookData.authors.map((author, index) => {\n      if (index > 0) {\n        return ', ' + author;\n      } else {\n        return author;\n      }\n    });\n  }\n\n  let imgLink = bookData.imageLinks;\n\n  if (imgLink !== undefined) {\n    imgLink = imgLink.smallThumbnail;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"book-img col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: imgLink || \"https://via.placeholder.com/100x150\",\n    alt: bookData.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"book-info col-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: bookData.infoLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }\n  }, bookData.title)), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, \"Author: \", authorsListed), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, bookData.description), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: () => saveBook(bookData),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, \"Save Book\")));\n}\n\nexport default BookResults;","map":{"version":3,"sources":["C:/Users/Abby/Documents/Github/Google-Books-Search/client/src/pages/BookResult.js"],"names":["React","API","saveBook","bookData","console","log","JSON","stringify","title","author","authors","synopsis","description","link","then","res","catch","err","BookResults","authorsListed","map","index","imgLink","imageLinks","undefined","smallThumbnail","infoLink"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CAEE;AACA;;AACA,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AAE1BC,EAAAA,OAAO,CAACC,GAAR,CAAa,eAAcC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAyB,EAApD;AAEAF,EAAAA,GAAG,CAACC,QAAJ,CAAa;AACTM,IAAAA,KAAK,EAAEL,QAAQ,CAACK,KADP;AAETC,IAAAA,MAAM,EAAEN,QAAQ,CAACO,OAAT,CAAiB,CAAjB,CAFC;AAGTC,IAAAA,QAAQ,EAAER,QAAQ,CAACS,WAHV;AAITC,IAAAA,IAAI,EAAE;AAJG,GAAb,EAMKC,IANL,CAMUC,GAAG,IAAIX,OAAO,CAACC,GAAR,CAAY,OAAZ,CANjB,EAOKW,KAPL,CAOWC,GAAG,IAAIb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAPlB;AASD;;AAAA;;AAEH,SAASC,WAAT,CAAqB;AAACf,EAAAA;AAAD,CAArB,EAAiC;AAE/B,MAAIgB,aAAa,GAAG,EAApB;;AAEA,MAAGhB,QAAQ,CAACO,OAAZ,EAAqB;AAEfS,IAAAA,aAAa,GAAGhB,QAAQ,CAACO,OAAT,CAAiBU,GAAjB,CAAqB,CAACX,MAAD,EAASY,KAAT,KAAmB;AACtD,UAAGA,KAAK,GAAG,CAAX,EAAc;AACV,eAAO,OAAKZ,MAAZ;AACH,OAFD,MAEO;AACH,eAAOA,MAAP;AACH;AACF,KANe,CAAhB;AAQL;;AAED,MAAIa,OAAO,GAAGnB,QAAQ,CAACoB,UAAvB;;AAEA,MAAGD,OAAO,KAAKE,SAAf,EAA0B;AACxBF,IAAAA,OAAO,GAAGA,OAAO,CAACG,cAAlB;AACD;;AAEC,sBACQ;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEH,OAAO,IAAI,qCAArB;AAA4D,IAAA,GAAG,EAAEnB,QAAQ,CAACK,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFF,eAME;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAEL,QAAQ,CAACuB,QAAlB;AAA4B,IAAA,MAAM,EAAC,QAAnC;AAA4C,IAAA,GAAG,EAAC,qBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuEvB,QAAQ,CAACK,KAAhF,CAAJ,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaW,aAAb,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIhB,QAAQ,CAACS,WAAb,CAHJ,eAII;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAE,MAAMV,QAAQ,CAACC,QAAD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CANF,CADR;AAiBD;;AAGH,eAAee,WAAf","sourcesContent":["import React from \"react\"\r\nimport API from \"../utils/API\";\r\n\r\n  // When the form is submitted, use the API.saveBook method to save the book data\r\n  // Then reload books from the database\r\n  function saveBook(bookData) {\r\n\r\n    console.log(`book data - ${JSON.stringify(bookData)}`)\r\n\r\n    API.saveBook({\r\n        title: bookData.title,\r\n        author: bookData.authors[0],\r\n        synopsis: bookData.description,\r\n        link: 'www.google.com'\r\n      })\r\n        .then(res => console.log('saved'))\r\n        .catch(err => console.log(err));\r\n        \r\n  };\r\n\r\nfunction BookResults({bookData}) {\r\n\r\n  let authorsListed = '';\r\n\r\n  if(bookData.authors) {\r\n\r\n        authorsListed = bookData.authors.map((author, index) => { \r\n          if(index > 0) { \r\n              return ', '+author; \r\n          } else { \r\n              return author; \r\n          }\r\n        });\r\n\r\n  } \r\n\r\n  let imgLink = bookData.imageLinks;\r\n\r\n  if(imgLink !== undefined) {\r\n    imgLink = imgLink.smallThumbnail;\r\n  }\r\n\r\n    return (\r\n            <div className=\"result row\">\r\n\r\n              <div className=\"book-img col-2\">\r\n                  <img src={imgLink || \"https://via.placeholder.com/100x150\"} alt={bookData.title}/>\r\n              </div>\r\n\r\n              <div className=\"book-info col-9\">\r\n                  <h1><a href={bookData.infoLink} target=\"_blank\" rel=\"noopener noreferrer\">{bookData.title}</a></h1>\r\n                  <h3>Author: {authorsListed}</h3>\r\n                  <p>{bookData.description}</p>\r\n                  <button className=\"btn btn-primary\" onClick={() => saveBook(bookData)}>Save Book</button>\r\n              </div>\r\n              \r\n            </div>\r\n\r\n    );\r\n  }\r\n\r\n\r\nexport default BookResults;\r\n"]},"metadata":{},"sourceType":"module"}