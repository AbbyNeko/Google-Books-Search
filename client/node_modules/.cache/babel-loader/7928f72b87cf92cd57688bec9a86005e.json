{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Abby\\\\Documents\\\\Github\\\\Google-Books-Search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from\"react\";import API from\"../utils/API\";import BookResult from\"./BookResult\";function SearchBooks(){// Setting our component's initial state\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),bookResults=_useState2[0],setResults=_useState2[1];var searchKeyword=useRef();// search job postings\nfunction searchBooks(keyword){API.searchBooks(keyword).then(function(res){return setResults(res.data);}).catch(function(err){return console.log(err);});}// When the form is submitted, use the API.saveBook method to save the book data\n// Then reload books from the database\nfunction handleFormSubmit(event){event.preventDefault();searchBooks(searchKeyword.current.value);}//console.log(`results - ${JSON.stringify(bookResults)}`);\nvar listedResults=bookResults.map(function(result,index){return/*#__PURE__*/React.createElement(BookResult,{bookData:result.volumeInfo,key:index});});return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"title\"},\"Search Google Books\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleFormSubmit},/*#__PURE__*/React.createElement(\"input\",{className:\"search-bar\",type:\"text\",placeholder:\"Search book title, author, etc.\",ref:searchKeyword}),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primary\",value:\"Search Books\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"results\"},listedResults)));}export default SearchBooks;","map":{"version":3,"sources":["C:/Users/Abby/Documents/Github/Google-Books-Search/client/src/pages/SearchBooks.js"],"names":["React","useState","useRef","API","BookResult","SearchBooks","bookResults","setResults","searchKeyword","searchBooks","keyword","then","res","data","catch","err","console","log","handleFormSubmit","event","preventDefault","current","value","listedResults","map","result","index","volumeInfo"],"mappings":"2LAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,KAAwC,OAAxC,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAEA,QAASC,CAAAA,WAAT,EAAuB,CACrB;AADqB,cAEaJ,QAAQ,CAAC,EAAD,CAFrB,wCAEdK,WAFc,eAEDC,UAFC,eAIrB,GAAMC,CAAAA,aAAa,CAAGN,MAAM,EAA5B,CAEA;AACA,QAASO,CAAAA,WAAT,CAAqBC,OAArB,CAA8B,CAC5BP,GAAG,CAACM,WAAJ,CAAgBC,OAAhB,EACGC,IADH,CACQ,SAAAC,GAAG,QAAIL,CAAAA,UAAU,CAACK,GAAG,CAACC,IAAL,CAAd,EADX,EAEGC,KAFH,CAES,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EAFZ,EAGD,CAED;AACA;AACA,QAASG,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,CAE7BA,KAAK,CAACC,cAAN,GAEAX,WAAW,CAACD,aAAa,CAACa,OAAd,CAAsBC,KAAvB,CAAX,CACH,CAED;AAEA,GAAMC,CAAAA,aAAa,CAAGjB,WAAW,CAACkB,GAAZ,CAAgB,SAACC,MAAD,CAASC,KAAT,qBACpC,oBAAC,UAAD,EAAY,QAAQ,CAAED,MAAM,CAACE,UAA7B,CAAyC,GAAG,CAAED,KAA9C,EADoC,EAAhB,CAAtB,CAIE,mBACI,2BAAK,SAAS,CAAC,WAAf,eAEI,2BAAK,SAAS,CAAC,KAAf,eACE,0BAAI,SAAS,CAAC,OAAd,wBADF,cAGE,4BAAM,QAAQ,CAAER,gBAAhB,eAEI,6BACE,SAAS,CAAC,YADZ,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,iCAHd,CAIE,GAAG,CAAEV,aAJP,EAFJ,cAQI,6BAAO,IAAI,CAAC,QAAZ,CAAqB,SAAS,CAAC,iBAA/B,CAAiD,KAAK,CAAC,cAAvD,EARJ,CAHF,cAeE,2BAAK,SAAS,CAAC,SAAf,EAEGe,aAFH,CAfF,CAFJ,CADJ,CA4BD,CAGH,cAAelB,CAAAA,WAAf","sourcesContent":["import React, { useState, useRef } from \"react\"\r\nimport API from \"../utils/API\";\r\nimport BookResult from \"./BookResult\";\r\n\r\nfunction SearchBooks() {\r\n  // Setting our component's initial state\r\n  const [bookResults, setResults] = useState([])\r\n\r\n  const searchKeyword = useRef();\r\n\r\n  // search job postings\r\n  function searchBooks(keyword) {\r\n    API.searchBooks(keyword)\r\n      .then(res => setResults(res.data))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // When the form is submitted, use the API.saveBook method to save the book data\r\n  // Then reload books from the database\r\n  function handleFormSubmit(event) {\r\n\r\n      event.preventDefault();\r\n\r\n      searchBooks(searchKeyword.current.value);\r\n  }\r\n\r\n  //console.log(`results - ${JSON.stringify(bookResults)}`);\r\n\r\n  const listedResults = bookResults.map((result, index) => \r\n    <BookResult bookData={result.volumeInfo} key={index}/>\r\n  );\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <div className=\"row\">\r\n              <h1 className=\"title\">Search Google Books</h1>\r\n\r\n              <form onSubmit={handleFormSubmit}>\r\n\r\n                  <input \r\n                    className=\"search-bar\"\r\n                    type=\"text\"\r\n                    placeholder=\"Search book title, author, etc.\"\r\n                    ref={searchKeyword}\r\n                  />\r\n                  <input type=\"submit\" className=\"btn btn-primary\" value=\"Search Books\"/>\r\n\r\n              </form>\r\n\r\n              <div className=\"results\">\r\n\r\n                {listedResults}\r\n\r\n              </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default SearchBooks;\r\n"]},"metadata":{},"sourceType":"module"}